#!/usr/bin/python3
# -*- coding: utf-8 -*-
##############################################
# Home	: http://netkiller.github.io
# Author: Neo <netkiller@msn.com>
# Upgrade: 2023-01-11
##############################################
import os
import sys
try:
    module = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    sys.path.insert(0, module)
    from netkiller.docker import *
except ImportError as err:
    print("%s" % (err))

project = 'logstash'

# extra_hosts = [
#    'mongo.netkiller.cn:172.17.195.17', 'eos.netkiller.cn:172.17.15.17',
#    'cfca.netkiller.cn:172.17.15.17'
# ]

dockerfile = Dockerfile()
dockerfile.image('docker.elastic.co/logstash/logstash:8.6.0').run(
    ['apk add -U tzdata', 'rm -f /usr/share/logstash/pipeline/logstash.conf']
).copy('pipeline/', '/usr/share/logstash/pipeline/').copy('config/', '/usr/share/logstash/config/').workdir('/usr/share/logstash')

logstash = Services(project)
# logstash.image('logstash/logstash:alpine')
# logstash.build(dockerfile)
logstash.image('docker.elastic.co/logstash/logstash:8.6.0')
logstash.container_name(project)
logstash.restart('always')
# logstash.hostname('www.netkiller.cn')
# openrelogstashsty.extra_hosts(extra_hosts)
logstash.extra_hosts(['elasticsearch:127.0.0.1'])
logstash.environment(['TZ=Asia/Shanghai','XPACK_MONITORING_ENABLED=false','LOG_LEVEL=info'])
logstash.ports(['12201:12201/udp', '12201:12201/tcp','5044:5044'])
#logstash.ports(['12201:12201','4567:4567'])
# logstash.depends_on('test')
logstash.working_dir('/usr/share/logstash')
logstash.user('root')
logstash.volumes(
    [
        '/srv/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml',
        '/srv/logstash/pipeline/config.conf:/usr/share/logstash/pipeline.d/config.conf',
        '/srv/logstash/pipeline/filebeat.conf:/usr/share/logstash/pipeline.d/filebeat.conf',
        #'/srv/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:rw',
        '/srv/logstash/logs/:/usr/share/logstash/logs/',
        '/opt/log/:/opt/log/',
        '/proc:/proc','/sys:/sys'
    ]
).privileged()

dockerfile = Dockerfile() 
dockerfile.image('fauria/vsftpd')
dockerfile.run("sed -i 's/write_enable=YES/write_enable=NO/' /etc/vsftpd/vsftpd.conf")

vsftpd = Services('vsftpd')
vsftpd.build(dockerfile)
vsftpd.image('fauria/vsftpd:logging')
vsftpd.container_name('vsftpd')
vsftpd.restart('always')
vsftpd.ports(['20:20/tcp', '21:21/tcp','21100-21110:21100-21110'])
vsftpd.environment([
    'FTP_USER=log',
    'FTP_PASS=xatzzfD18sNJyYLlo0y0UslRVJgJT1ZM',
    'PASV_ADDRESS=127.0.0.1',
    'PASV_MIN_PORT=21100',
    'PASV_MAX_PORT=21110',
    'FILE_OPEN_MODE=0555'
])
vsftpd.volumes([
    '/opt:/home/vsftpd:ro'
])

caddy = Services('caddy')
caddy.image('caddy:latest')
caddy.container_name('caddy')
caddy.restart('unless-stopped')
caddy.ports(['80:80'])
caddy.volumes(['/opt/log:/usr/share/caddy'])
caddy.command(['/usr/bin/caddy','file-server','--browse', '--root', '/usr/share/caddy'])

logging = Composes('logging')
logging.workdir('/var/tmp/development')
logging.version('3.9')
logging.services(logstash)
logging.services(vsftpd)
logging.services(caddy)

if __name__ == '__main__':
    try:
        docker = Docker(
            # {'DOCKER_HOST': 'ssh://root@192.168.30.11'}
        )
        # docker.sysctl({'neo': '1'})
        docker.environment(logging)
        docker.main()
    except KeyboardInterrupt:
        print("Crtl+C Pressed. Shutting down.")

